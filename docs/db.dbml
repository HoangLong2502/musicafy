Project musicafy {
  database_type: 'PostgresQL'
  Note: '''
    # Musicafy Database
  '''
}

enum gender {
  "nam"
  "nữ"
  "khác"
}

// =============== USER ===============

Table users as U {
  id serial [pk]
  username varchar [unique, not null]
  hashed_password varchar [not null]
  full_name varchar [not null]
  is_verify boolean [not null, default: false]
  email varchar
  gender gender
  licence varchar
  dob timestamp
  active bool [not null, default: true]
  avatar varchar(255)
  package serial
  package_expire timestamptz [null]
  updated_at timestamptz
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]
}

Ref: U.package > packages.id [delete: set null]

Table packages {
  id serial [pk]
  thumb varchar [note: 'ảnh cover']
  title varchar
  code varchar
  level int [default: 1]
  duration int [default: 0, note: 'đơn vị giây']
  description varchar
}

Table package_price {
  id serial [pk]
  title varchar
  code varchar
  recommend bool [default: false]
  price float [default: 0]
  description varchar
  package serial
}

Ref: package_price.package > packages.id [delete: cascade]

Table payment {
  id serial [pk]
  code varchar [not null, note: 'PM_{user.id}_{random}']
  user serial
}

Ref: payment.user > U.id [delete: cascade]

Table transaction {
  id serial [pk]
  code varchar [note: 'mã giao dịch']
  payment serial
  package serial
  value float [default: 0]
  discount float [default: 0]
  is_pair bool [default: false]
  pair_at timestamp [null]
  log_preferred jsonb
  created_at timestamp [default: `now()`]
}

Ref: transaction.payment > payment.id [delete: cascade]
Ref: transaction.package > packages.id [delete: set null]

Table sessions {
  id serial [pk]
  username varchar [not null]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: false]
  expires_at timestamptz [not null]
  created_at timestamptz [not null, default: `now()`]
}

Ref: sessions.username > U.username [delete: cascade]

Table verifies {
  id serial [pk]
  username varchar [not null]
  email varchar [not null]
  secret_code varchar [not null]
  is_used bool [not null, default: false]
  created_at timestamptz [not null, default: `now()`]
  expired_at timestamptz [not null, default: `(now() + interval '15 minutes')`]
}

Ref: verifies.username > U.username [delete: cascade]


Table songs {
  id serial [pk]
  mask_id varchar(255) [not null]
  title varchar(255) [not null]
  alias varchar(255)
  is_offical bool [default: true]
  thumbnail varchar(255)
  thumbnailM varchar(255)
  duration int [not null, default: 0]
  releaseDate int
  album serial
  distributor varchar(255)
  hasLyric bool [not null, default: false]
  like int [not null, default: 0]
  listen int [not null, default: 0]
  comment int [not null, default: 0]
  audio_file varchar
}

Ref songs_artists: songs.id <> artists.id // many-to-many
Ref songs_genres: songs.id <> genres.id // many-to-many
Ref songs_composers: songs.id <> composers.id // many-to-many
Ref: songs.album > albums.id [delete: set null]

Table artists {
  id serial [pk]
  mask_id varchar(255) [not null]
  name varchar(255)
  spotlight boolean
  alias varchar(255)
  thumbnail varchar(255)
  thumbnailM varchar(255)
  playlistId varchar(20)
  totalFollow int [not null, default: 0]
}

Table composers {
  id serial [pk]
  mask_id varchar(255) [not null]
  name varchar(255)
  spotlight boolean
  alias varchar(255)
  thumbnail varchar(255)
  cover varchar(255)
}

Table albums {
  id serial [pk]
  mask_id varchar(255) [not null]
  title varchar(255) [not null]
  is_offical bool [default: true]
  thumbnail varchar(255)
  sortDescription varchar(255)
  release_at int
}
Ref albums_artists: albums.id <> artists.id // many-to-many
Ref albums_genres: albums.id <> genres.id // many-to-many

Table genres {
  id serial [pk]
  mask_id varchar(255) [not null]
  title varchar(255) [not null]
  name varchar(255) [not null]
  alias varchar(255)
}

Table song_file_mp3 {
  id serial [pk]
  title varchar(255)
  url varchar(255) [not null]
  description varchar(255)
  is_vip bool [default: false]
  song serial
}
Ref: song_file_mp3.song > songs.id [delete: cascade]

Table song_lyric {
  id serial [pk]
  song serial [unique]
  file varchar(255)
  data jsonb
}
Ref: songs.id - song_lyric.song [delete: cascade]

Table play_list {
  id serial [pk]
  title varchar(255)
  users serial
  thumbnail varchar
  sort_description varchar
  created_at timestamp [default: `now()`]
  is_private bool [default: false]

}

Ref: play_list.id <> songs.id [delete: cascade]
Ref: play_list.users > users.id [delete: cascade]
